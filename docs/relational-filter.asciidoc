[[relational-browsing]]
== Kibi Relational Browsing

Kibi adds a relational dimension to Kibana when browsing indexes,
allowing to _filter_ documents on a dashboard by showing only those that have
a relation with documents displayed in a different dashboard, possibly stored
in different indices.

There are two paradigms a user can follow:

1. through the <<relational-panel>>, a user picks a set of dashboards to join: filtering documents within a dashboard **automatically** updates the other related dashboards; and
2. through the <<relational-filter>>, a user _builds_ interactivelly the sequence of dashboards to join.

[[relational-panel]]
=== Relational Panel

With the relational panel browsing paradigm, all the dashboards of interest are join together. Effectivelly, documents that can be viewed in each dashboard are those that are connected with the rest.

For example, consider two dashboards Articles and Companies which documents are related to one another; if one filters articles by their publishing date to a certain range, then only the companies that are mentioned in articles published within that range are displayed.

==== Configuration

In order to use this browsing paradigm, it is necessary to configure the <<kibi-settings-relations,relationships>>.

Once this is done, you can view which dashboards are connected to each other using the relational panel by clicking on the icon image:images/relations-settings/relational-panel-icon.png["Relational panel icon"] in the Dashboard tab.
In the image below, the dashboards Articles, Companies, and Investments are connected together.

image::images/relational-panel/panel.png["Relational panel",align="center"]

[[relational-panel-browsing]]
==== Browsing

Since a <<saving-dashboards,saved search>> is now associated with a dashboard, a count indicating the current number of documents in that dashboard is displayed on each tab. For example on the previous image, there are 3558 articles, 840 companies, and 840 investments rounds that are inter-connected. These numbers coupled with the relational panel allows to get a feeling of the current state of the joined dashboards.
The current set of connected dashboards are displayed in the label of the blue filter image:images/relational-panel/filter.png["relational panel filter"].

Since all the dashboards in the set are connected to each other, adding a filter to a dashboard will also update the connected dashboards. If you select **TechCrunch** as the source for articles, there are now in total 653 articles. Being automatically updated, we observe that only 311 companies and investments out of 840 are actually connected to those articles from TechCrunch.

image::images/relational-panel/with-filter.png["Relational panel with a filter",align="center"]

You can see the current filters that are applied with the relational panel by hovering the mouse over the blue filter.
The explanation tooltip shown below indicates that the current 311 companies are connected with:

- articles coming from TechCrunch published within a specific time range; and
- investments funded within another time range.

image::images/relational-panel/explanation.png["Explanation of the relational filter",align="center"]

[[relational-filter]]
=== Relational filter

The Kibi relational filter visualization allows to "pivot" from a dashboard
to another by creating a join between multiple indexes based on their
relations. This allows to interactivelly build the sequence of dashboards to join.

Relations are defined between index fields; for example, let's take the
following indexes:

[horizontal]
_Articles_:: an index containing articles; each document in the index has
a field called `companyid` that contains the ID of the company mentioned in the
article. The index is displayed on dashboard named `Articles`.
_Companies_:: an index containing information about companies; each document
in the index has a field called `id` that contains the ID of the company.
The index is displayed on a dashboard named `Companies`.

Using the Relational filter visualization, it is possible to configure a
relation between `Articles.companyid` and `Companies.id` and use it as a
filter on the Companies index.

The result is that it becomes possible to search specific articles in the
_Articles_ dashboard, then switch to the _Companies_ dashboard and see only
companies mentioned in _Articles'_ search results.

In the _Articles_ dashboard, the relation is displayed as a button which,
if configured properly, will display the number of documents in the _Companies_
dashboard related to the documents displayed in the _Articles_ dashboard.

The screenshot below shows the button for the relation described in the
example; there are 48 companies mentioned in the 234 articles currently
displayed:

image::images/relational-filter/relational-filter-companies-source.png["Relational filter button in source dashboard",align="center", width="400"]

Clicking on the button will switch to the _Companies_ dashboard and display
the 48 companies; the relational filter is displayed in the filter bar, as
displayed below:

image::images/relational-filter/relational-filter-companies-target.png["Relational filter in target dashboard",align="center", width="400"]

The Kibi Relational filter visualization requires the Siren 2.0 plugin for
Elasticsearch, which is currently available as a pre-release in
`lib\es-filter-join.zip`; the plugin is compatible with Elasticsearch 1.6 and
1.7.

For more information about the Siren 2.0 plugin visit our website at
http://siren.solutions .

[float]
[[relational-filter-config]]
==== Configuration

Click on the _Add filter_ button to create a new filter in the visualization;
the filter is defined by the following parameters:

- _Button label_: the label of the button that will be displayed inside the
visualization, e.g. `Companies -->`.
- _Custom filter label_: the label of the filter that will be displayed in the
filter bar, Default is `... related to ($COUNT) from $DASHBOARD.`,
where:
$COUNT is a number of items on source dashboard,
$DASHBOARD is a source dashboard name.
User can use these two variable placeholders when writing custom filter label.
- _Source index_: the source index in the relation.
- _Source index type_: the source index document type.
- _Source field_: the source index field in the relation.
- _Target index_: the index to be joined with _Source index_.
- _Target field_: the field in the target index related to _Source field_.
- _Target index type_: the target index document type.
- _Target dashboard_: the dashboard on which the join filter will be applied
when clicking on the button.

The screenshot below shows the configuration of a relation between
`Articles` and `Companies`:

image::images/relational-filter/relational-filter-config.png["Relational filter configuration",align="center"]

It is possible to define multiple relations in a single Kibi relational
filter visualization; the visualization will display only buttons applicable
to the currently displayed dashboard.

[float]
[[relational-filter-usage]]
==== Usage

When clicking on a button in the Kibi Relational filter visualization,
the current state of the source dashboard is added to relational filter
and applied on the target dashboard.
To see the explanation of a relational filter, just move the mouse over it.

Below we started on **Articles** dashboard, searched for pizza and clicked
on the relational button to rotate to **Companies**.
As we see on the explanation there is only one step which shows
what queries and filters were applied on **Articles**.

```
1 article.companyid -> company.id
  query pizza
  time filter on pdate
```

image::images/relational-filter/relational-filter-explanation1.png["Relational filter explanation",align="center"]

Next we added a regular filter country to USA (`countrycode: USA`) and clicked
on a relational filter button to go to **Investments**.
Now the explanation shows two steps.

```
2 company.id -> investment.companyid
  filter countrycode
  time filter on funded_date

1 article.companyid -> company.id
  query pizza
  time filter on pdate
```

image::images/relational-filter/relational-filter-explanation2.png["Relational filter explanation",align="center"]

Explanation steps are always shown in reverse - last one on the top.
